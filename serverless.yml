service: ${self:custom.serviceName}

plugins:
  - serverless-s3-sync

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'demo'}
  region: ${env:region, 'eu-west-1'}
  memorySize: 128
  stackTags:
    name: ${self:service}
  environment:
    ORIGIN: https://${self:custom.frontBucket}.s3-${self:provider.region}.amazonaws.com

resources:
  Resources:
    S3Front:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.frontBucket}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html        

    FrontEndBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: S3Front
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "S3Front"
                    },
                    "/*"
                  ]
                ]

functions:
  login:
    handler: backend/app.handler
    events:
      - http:
          path: /{proxy+}
          method: any
          cors: true

    environment:
      ALLOWED_DOMAINS: ${self:custom.frontBucket}.s3-${self:provider.region}.amazonaws.com
      IDP_HOST: ${env:IDP_HOST}
      JWT_SAML_PROFILE:	nameID,urn:oid:2.5.4.42
      JWT_SECRET: ${env:JWT_SECRET, "12345678"}
      SAML_CERT: ${env:SAML_CERT}
      SAML_DOMAIN:
        !Join
          - ''
          - - !Ref ApiGatewayRestApi
            - '.execute-api.'
            - ${self:provider.region}
            - '.amazonaws.com'
      SAML_ISSUER: saml-jwt-${self:custom.serviceName}
      STAGE: ${self:provider.stage}

custom:
  setupFile: ./setup.${self:provider.stage}.json
  serviceName: ${file(${self:custom.setupFile}):serviceName}
  frontBucket: ${self:custom.serviceName}-${file(${self:custom.setupFile}):frontendBucket}
  s3Sync:
    - bucketName: ${self:custom.frontBucket} 
      localDir: html
      deleteRemoved: true

package:
  exclude:
    - node_modules/**
    - html/**